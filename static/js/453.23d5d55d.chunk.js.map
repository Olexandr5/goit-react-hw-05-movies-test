{"version":3,"file":"static/js/453.23d5d55d.chunk.js","mappings":"oMAGaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,C,qICfYI,EAAS,kBACpB,0BACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,iBARG,ECiDtB,EA7Ce,WACb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAeoB,EAAf,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAaI,IAAI,SAChCD,IAGLE,EAAAA,EAAAA,IAAiBF,GACdG,KAAKV,GACLW,SAAQ,WACPT,GAAa,GACbH,EAASQ,EACV,GACJ,GAAE,CAACH,IAWJ,OACE,gCACGH,IAAa,SAACX,EAAD,KACd,oCACA,kBAAMsB,SAbY,SAAAC,GACpBA,EAAIC,iBACJZ,GAAa,GACbG,EAAgB,CAAEP,MAAAA,GACnB,EASG,WACE,kBACEiB,KAAK,OACLC,KAAK,QACLC,MAAOnB,EACPoB,SAbc,SAAAL,GACpBd,EAASc,EAAIM,OAAOF,MACrB,KAaK,mBAAQF,KAAK,SAAb,wBAEF,SAACpC,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C,uKChDDwC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,sBAAiC,CAClDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBnB,EAAgB,mCAAG,WAAMX,GAAN,uFACXsB,EAAAA,EAAAA,IAAA,8CACsBtB,EADtB,+BAEjB,CACEyB,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBC,EAAoB,mCAAG,WAAM3C,GAAN,uFACfkC,EAAAA,EAAAA,IAAA,gBAAmBlC,EAAnB,kBAAuC,CACxDqC,OAAQ,CACNC,QAASH,KAHqB,cAC5BK,EAD4B,yBAM3BA,EAAKC,MANsB,2CAAH,sDAQpBG,EAAa,mCAAG,WAAM5C,GAAN,uFACRkC,EAAAA,EAAAA,IAAA,gBAAmBlC,EAAnB,4BAAiD,CAClEqC,OAAQ,CACNC,QAASH,KAHc,cACrBK,EADqB,yBAMpBA,EAAKC,KAAKI,MANU,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","components/Loader/Loader.jsx","pages/Movies/Movies.jsx","services/apiServicec.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Dna } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <div>\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  </div>\n);\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/apiServicec';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (!searchQuery) {\n      return;\n    }\n    getMoviesByQuery(searchQuery)\n      .then(setMovies)\n      .finally(() => {\n        setisLoading(false);\n        setQuery(searchQuery);\n      });\n  }, [searchParams]);\n\n  const handlerSubmit = evt => {\n    evt.preventDefault();\n    setisLoading(true);\n    setSearchParams({ query });\n  };\n  const handlerChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <h1>Movies</h1>\n      <form onSubmit={handlerSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={handlerChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList movies={movies}></MoviesList>\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '11517d6931d2b5137dd13eb45c72b984';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMoviesDetailsPage = async id => {\n  const resp = await axios.get(`movie/${id}language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\nexport const getMoviesCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","useState","query","setQuery","setMovies","isLoading","setisLoading","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","getMoviesByQuery","then","finally","onSubmit","evt","preventDefault","type","name","value","onChange","target","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesDetailsPage","getMoviesCast","cast"],"sourceRoot":""}